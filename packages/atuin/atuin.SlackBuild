#!/bin/bash
# Atuin package builder for UnRAID/Slackware
set -e

PRGNAM=atuin
VERSION=${VERSION:-18.6.1}
BUILD=${BUILD:-1}
TAG=${TAG:-_unRAID}
PKGTYPE=txz
ARCH="x86_64"
OUTPUT=${OUTPUT:-/tmp}
REPO_DIR="../../slackware64/packages"

CWD=$(pwd)
TMP=${TMP:-/tmp/build-$PRGNAM}
PKG=$TMP/package-$PRGNAM
DOWNLOADS=$TMP/downloads

echo "Building $PRGNAM version: $VERSION"

# Clean and create directories
rm -rf $TMP
mkdir -p $TMP $PKG $OUTPUT $DOWNLOADS

# Download binary to temporary location only
TARBALL="atuin-$ARCH-unknown-linux-gnu.tar.gz"
echo "Downloading $TARBALL to temporary location..."
wget -O $DOWNLOADS/$TARBALL \
  "https://github.com/atuinsh/atuin/releases/download/v$VERSION/$TARBALL"

# Extract to a clean temporary directory
cd $TMP
echo "Extracting $TARBALL..."
tar -xzf $DOWNLOADS/$TARBALL
cd atuin-$ARCH-unknown-linux-gnu

# Install binary
mkdir -p $PKG/usr/bin
echo "Installing binary..."
install -m 755 atuin $PKG/usr/bin/

# Install documentation
mkdir -p $PKG/usr/doc/$PRGNAM-$VERSION
echo "Installing documentation..."
cp -a README.md LICENSE $PKG/usr/doc/$PRGNAM-$VERSION/ 2>/dev/null || true
cat $CWD/$PRGNAM.SlackBuild > $PKG/usr/doc/$PRGNAM-$VERSION/$PRGNAM.SlackBuild

# Install slack-desc
mkdir -p $PKG/install
echo "Installing slack-desc..."
cat $CWD/slack-desc > $PKG/install/slack-desc

# Create package (normalize permissions/ownership for Unraid)
PACKAGE_FILE="$PRGNAM-$VERSION-$ARCH-$BUILD$TAG.$PKGTYPE"
echo "Creating package $PACKAGE_FILE..."
cd $PKG
# Create archive with root:root ownership encoded
# --numeric-owner ensures 0:0 is used regardless of names on build host
tar --numeric-owner --owner=0 --group=0 -cJf $OUTPUT/$PACKAGE_FILE .

# Move to repository
mkdir -p $CWD/$REPO_DIR
echo "Moving package to repository..."
mv $OUTPUT/$PACKAGE_FILE $CWD/$REPO_DIR/

# Update repository metadata
cd $CWD/$REPO_DIR
echo "Updating repository metadata..."

# Generate CHECKSUMS.md5 (simple md5sum)
echo "Generating CHECKSUMS.md5..."
md5sum *.txz > CHECKSUMS.md5

# Generate PACKAGES.TXT 
echo "Generating PACKAGES.TXT..."
{
  echo "PACKAGES.TXT; $(date)"
  echo ""
  for pkg in *.txz; do
    if [ -f "$pkg" ]; then
      echo "PACKAGE NAME: $pkg"
      echo "PACKAGE LOCATION: ./$pkg"
      
      # Use portable file size detection
      SIZE=$(ls -l "$pkg" | awk '{print $5}')
      echo "PACKAGE SIZE (compressed): $SIZE"
      
      # Calculate uncompressed size safely
      UNCOMPRESSED_SIZE=$(tar -tvf "$pkg" | awk '{sum += $3} END {print sum}')
      echo "PACKAGE SIZE (uncompressed): $UNCOMPRESSED_SIZE"
      
      echo "PACKAGE DESCRIPTION:"
      
      # Extract slack-desc safely
      tar -xf "$pkg" install/slack-desc --to-stdout 2>/dev/null | 
        grep -v "^#" | grep -v "^$" || 
        echo "$pkg: Package description not available"
      echo ""
    fi
  done
} > PACKAGES.TXT

# Generate MANIFEST.bz2
echo "Generating MANIFEST.bz2..."
{
  for pkg in *.txz; do
    if [ -f "$pkg" ]; then
      echo "++=========================================="
      echo "||   Package: $pkg"
      echo "++=========================================="
      tar -tvf "$pkg"
      echo ""
    fi
  done
} | bzip2 > MANIFEST.bz2

# Clean up
echo "Cleaning up build files and temporary downloads..."
rm -rf $TMP
rm -f $CWD/*.tar.gz 

echo "$PRGNAM $VERSION built successfully and repository metadata updated!"
echo ""
echo "Package: $REPO_DIR/$PACKAGE_FILE"
echo "Size: $(ls -lh $REPO_DIR/$PACKAGE_FILE | awk '{print $5}')"